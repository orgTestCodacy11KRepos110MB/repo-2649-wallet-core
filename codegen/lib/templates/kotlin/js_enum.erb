<%= render('kotlin/package.erb') %>

actual enum class <%= entity.name %>(
    internal val _value: dynamic,
) {
<%# Cases -%>
<%  entity.cases.each_with_index do |c, i| -%>
    <%= c.name %>(WalletCore.Instance.<%= entity.name %>.<%= KotlinHelper.fix_name(WasmCppHelper.format_name(c.name)) %>),
<%  end -%>
    ;
<%# Property declarations -%>
<%- entity.properties.each do |property| -%>

    actual val <%= KotlinHelper.format_name(property.name) %><%= KotlinHelper.return_type(property.return_type) %>
        get() = <%= KotlinHelper.convert_calling_return_type_js(property.return_type, "_value.#{WasmCppHelper.function_name(entity: entity, function: property)}()") %>
<%- end -%>
<%# Method declarations -%>
<%- entity.methods.each do |method| -%>
<%-   next if method.name.start_with?('Delete') -%>

    actual fun <%= KotlinHelper.format_name(method.name) %>(<%= KotlinHelper.parameters(method.parameters.drop(1)) %>)<%= KotlinHelper.return_type(method.return_type) %> =
        <%= KotlinHelper.convert_calling_return_type_js(method.return_type, "_value.#{WasmCppHelper.function_name(entity: entity, function: method)}(#{KotlinHelper.calling_parameters_js(method.parameters.drop(1))})") %>
<%- end -%>
<%# Value -%>
<%  if entity.cases.any? { |e| !e.value.nil? } -%>

    internal companion object {
        internal fun fromValue(value: dynamic): <%= entity.name %>? =
            values().firstOrNull { it._value == value }
    }
<%  end -%>
}
